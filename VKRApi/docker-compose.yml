services:
  vkr-db:
    image: postgres:16
    container_name: vkr-db
    ports:
      - "5434:5432"
    volumes:
      - app-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=s3cret
      - POSTGRES_USER=vkr_user
      - POSTGRES_DB=vkr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vkr_user -d vkr"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    container_name: vkr-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - file-storage:/data
    command: server /data --console-address ":9001"
    depends_on:
      - vkr-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  vkr-api:
    build:
      context: ./Vkr.Backend
      dockerfile: Vkr.Api/Dockerfile
    container_name: vkr-api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=vkr-db;Port=5432;Database=vkr;Username=vkr_user;Password=s3cret
      - Minio__Endpoint=http://vkr-minio:9000
      - Minio__AccessKey=minioadmin
      - Minio__SecretKey=minioadmin
    depends_on:
      vkr-db:
        condition: service_healthy
      minio:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: vkr-nginx
    ports:
      - "80:80"
    volumes:
      - ../VKR/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - vkr-api
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

volumes:
  app-db:
  file-storage:
